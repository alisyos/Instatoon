# Python package requirements
# Core dependencies
requests>=2.31.0
numpy>=1.24.0
pandas>=2.0.0
matplotlib>=3.7.0
pillow>=10.0.0

# Web framework
flask>=2.3.0
flask-cors>=4.0.0

# Document generation
python-docx>=0.8.11

# Development dependencies
pytest>=7.4.0
black>=23.0.0
flake8>=6.0.0


** GPT 모델은 반드시 'gpt-4.1' 모델을 적용해주세요. 해당 모델이 가장 최신 모델 입니다.

###

[입력값]
항목(필수항목은 * 표기)	입력 방식	입력 항목(선택일 경우에만)	플레이스홀더
등장인물	직접 입력		이름, 역할 등 간단히 입력해주세요.
필수 키워드 및 주제	직접 입력		꼭 들어가야하는 키워드나 주제가 있다면 입력해주세요.
*줄거리	직접 입력		인스타툰을 만들기 위한 줄거리를 입력해 주세요.
*분량	직접 입력		보통 4~8페이지를 권장합니다.


[출력값]
항목(camelCase)	항목(한글)	설명
wholeTitle	전체 제목	스토리보드의 완결성을 담은 한글 메인 타이틀. 10컷 내용을 포괄.
storyTopic	핵심 주제·메시지	이야기의 주제·의도를 1-2문장으로 요약. 카피·톤앤매너 가이드 역할.
hashtags	해시태그 배열	SNS 확산용 해시태그 5개. 키워드·감성·콘셉트 중심으로 작성.
pages	페이지 배열	1 : 1 비율 컷(최대 10개)을 순서대로 담는 배열.
pages[].page	페이지 번호	업로드·편집 순서를 고정하기 위한 정수(1 ~ 10).
pages[].character	등장인물 목록	해당 컷에 등장하는 캐릭터 이름 배열.
pages[].background	배경	장소·시간·분위기를 서술(예: "도심 카페, 오후 햇살").
pages[].dialogue	대사 객체	캐릭터별 대사 모음. 키=캐릭터 이름, 값=대사 형태.
pages[].dialogue.<캐릭터명>	캐릭터 대사	"지민: ..", "태우: .."처럼 각 인물이 말하는 문장.
pages[].expressionPose	표정/포즈	주요 인물들의 감정 표현, 몸짓, 카메라 앵글을 구체적으로 기술.


[프롬프트]
###지시사항
아래에 제공된 정보를 바탕으로, 독창적이면서도 명확한 스토리보드를 기획하십시오.

###작성지침
1. 필수 키워드·주제는 스토리 전반에 자연스럽게 녹여 넣으십시오.
2. 정방형(1 : 1) 이미지 10컷(10 페이지) 이내에서 플롯이 매끄럽게 이어지도록 균형 있게 배분하십시오.
3. 각 페이지마다 반드시 등장인물·배경·대사·표정/포즈를 기재하십시오.
4. 대사는 캐릭터 이름을 앞에 붙여 표기하십시오 예) 지민: "대사...".
5. 표정/포즈는 연출자가 즉시 이해할 만큼 구체적으로 기술하십시오.
6. 1 컷(페이지) = 1 JSON 객체이며, page 번호를 필수로 포함하십시오(업로드 순서 고정 목적).
7. 세이프 존(1080×1080 px 기준, 가장자리 120 px) 밖에 핵심 텍스트·캐릭터가 걸치지 않도록 유의하십시오.

###추가 세부 가이드
- 디자인‧연출: 컬러 팔레트·폰트·톤&매너를 일관되게 유지, 컷 간 시선 흐름(좌→우·상→하) 고려

###출력형식
json
{
"wholeTitle": "<완결성 있는 한글 제목>",
"storyTopic": "<핵심 주제·메시지를 1-2문장으로 요약>",
"hashtags": ["<hashtag1>", "<hashtag2>", "<hashtag3>", "<hashtag4>", "<hashtag5>"],
"pages": [
"page1": [
"character": ["<캐릭터1>", ...],
"background": "<>",
"dialogue": [
"character1": "<대사1>",
"character2": "<대사2>", ... ],
"expressionPose": "<주요 인물들의 표정과 액션>"
], ...
]
}

###줄거리
{{줄거리}}
###분량
{{분량}}장
